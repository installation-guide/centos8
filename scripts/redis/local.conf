
################################## MODULES #####################################
${REDIS_CONF_MODULE_REJSON}
${REDIS_CONF_MODULE_RSEARCH}
${REDIS_CONF_MODULE_RTIMESERIES}
${REDIS_CONF_MODULE_RGRAPH}
${REDIS_CONF_MODULE_RAI}
${REDIS_CONF_MODULE_RGEARS}

################################## NETWORK #####################################
bind * -::*
port ${REDIS_PORT}

# TCP listen() backlog.
#
# In high requests-per-second environments you need a high backlog in order
# to avoid slow clients connection issues. Note that the Linux kernel
# will silently truncate it to the value of /proc/sys/net/core/somaxconn so
# make sure to raise both the value of somaxconn and tcp_max_syn_backlog
# in order to get the desired effect.
tcp-backlog 511

unixsocket ${REDIS_RUN}/redis.sock
unixsocketperm 700

################################# GENERAL #####################################
pidfile ${REDIS_CONF_PIDFILE}
logfile ${REDIS_CONF_LOGFILE}

################################ SNAPSHOTTING  ################################
# save 3600 1
# save 300 100
# save 60 10000

stop-writes-on-bgsave-error yes
dbfilename ${REDIS_CONF_DATAFILE}
dir ${REDIS_DATA}

################################## SECURITY ###################################
aclfile ${REDIS_CONF_ACLFILE}
requirepass ${REDIS_AUTH}

################################### CLIENTS ####################################
# Set the max number of connected clients at the same time. By default
# this limit is set to 10000 clients
# maxclients 10000

############################## MEMORY MANAGEMENT ################################
maxmemory ${REDIS_CONF_MAX_MEMORY}
maxmemory-policy volatile-ttl

################################ THREADED I/O #################################
io-threads 6
io-threads-do-reads yes

################################## SLOW LOG ###################################
# The following time is expressed in microseconds, so 1000000 is equivalent
# to one second. Note that a negative number disables the slow log, while
# a value of zero forces the logging of every command.
slowlog-log-slower-than 10000

# There is no limit to this length. Just be aware that it will consume memory.
# You can reclaim memory used by the slow log with SLOWLOG RESET.
slowlog-max-len 512

################################ LATENCY MONITOR ##############################
# By default latency monitoring is disabled since it is mostly not needed
# if you don't have latency issues, and collecting data has a performance
# impact, that while very small, can be measured under big load. Latency
# monitoring can easily be enabled at runtime using the command
# "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.
latency-monitor-threshold 0

########################### ACTIVE DEFRAGMENTATION #######################
# It is possible to pin different threads and processes of Redis to specific
# CPUs in your system, in order to maximize the performances of the server.
# This is useful both in order to pin different Redis threads in different
# CPUs, but also in order to make sure that multiple Redis instances running
# in the same host will be pinned to different CPUs.
#
# Normally you can do this using the "taskset" command, however it is also
# possible to this via Redis configuration directly, both in Linux and FreeBSD.
#
# You can pin the server/IO threads, bio threads, aof rewrite child process, and
# the bgsave child process. The syntax to specify the cpu list is the same as
# the taskset command:
#
# Set redis server/io threads to cpu affinity 0,2,4,6:
# server_cpulist 0-7:2
#
# Set bio threads to cpu affinity 1,3:
# bio_cpulist 1,3
#
# Set aof rewrite child process to cpu affinity 8,9,10,11:
# aof_rewrite_cpulist 8-11
#
# Set bgsave child process to cpu affinity 1,10,11
# bgsave_cpulist 1,10-11

# In some cases redis will emit warnings and even refuse to start if it detects
# that the system is in bad state, it is possible to suppress these warnings
# by setting the following config which takes a space delimited list of warnings
# to suppress
#
# ignore-warnings ARM64-COW-BUG
