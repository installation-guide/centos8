user  ${SERVICE_USER};
worker_processes  auto;

# set open fd limit to 65536
#worker_rlimit_nofile 65536;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  8192;
    multi_accept on;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    map $status $loggable {
        ~^[23] 0;
        default 1;
    }
    access_log          ${SERVICE_HOME}/logs/access.log combined if=$loggable;
    #access_log         off;
    sendfile            on;
    sendfile_max_chunk  1m;
    keepalive_timeout   10;
    send_timeout        10;
    tcp_nopush          on;
    tcp_nodelay         on;
    aio                 threads;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    ##gzip
    #gzip  on;
    #gzip_min_length 10240;
    #gzip_comp_level 3;
    #gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    #gzip_proxied    no-store no-cache private expired auth;

    ##brotli
    brotli              on;
    brotli_comp_level   6;
    brotli_static       on;
    brotli_types        text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

    map $http_upgrade $connection_upgrade {
         default upgrade;
         ''      close;
    }

    # In the cookie named JSESSIONID, extract the data after the final 
    # period (.) and store it in the $route_cookie variable

    map $cookie_jsessionid $route_cookie {
       ~.+\.(?P<route>\w+)$ $route;
    }

    # Search the URL for a trailing jsessionid parameter, extract the data 
    # after the final period (.), and store it in the $route_uri variable

    map $request_uri $route_uri {
       ~jsessionid=.+\.(?P<route>\w+)$ $route;
    }

    ###
    # Setup multi sites
    ###
    include ${SERVICE_HOME}/conf/sites-enabled/*.conf;
    server_names_hash_bucket_size 64;
}
